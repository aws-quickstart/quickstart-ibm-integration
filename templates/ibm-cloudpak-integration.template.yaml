AWSTemplateFormatVersion: '2010-09-09'
Description: Template for an IBM Cloud Pak for Integration deployment with existing VPC. **WARNING** This template creates EC2 instances and related resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1r9m3n6h8)
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Parameters for deploying into an existing VPC"
    Order: "2"
  AWSAMIRegionMap:
    Filters:
      RHEL76HVM:
        name: RHEL-7.6_HVM_GA-20??????-x86_64-0-Hourly2-GP2
        owner-id: "309956199498"
        architecture: x86_64
        virtualization-type: hvm
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - NumberOfAZs
          - AvailabilityZones
          - VPCID
          - VPCCIDR
          - PrivateSubnet1ID
          - PrivateSubnet2ID
          - PrivateSubnet3ID
          - PublicSubnet1ID
          - PublicSubnet2ID
          - PublicSubnet3ID
          - BootNodeAccessCIDR
      - Label:
          default: DNS configuration
        Parameters:
          - DomainName
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - KeyPairName
      - Label:
          default: OpenShift hosts configuration
        Parameters:
          - NumberOfMaster
          - NumberOfCompute
          - MasterInstanceType
          - ComputeInstanceType
          - ClusterName
      - Label:
          default: Storage configuration    
        Parameters:
          - DedicatedOCS
          - NumberOfOCS
          - OCSInstanceType
      - Label:
          default: Red Hat subscription information
        Parameters:
          - RedhatPullSecret
      - Label:
          default: IBM Cloud Pak for Integration configuration
        Parameters:
          - CP4IVersion
          - APIUsername
          - APIKey
          - LicenseAgreement
          - Namespace
          - AdminPassword
          - AR
          - OD
          - APILM
          - AIDB
          - AIDE
          - MQ
          - ES
          - GW
          - HST
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
          - CP4IDeploymentLogsBucketName

    ParameterLabels:
      NumberOfAZs:
        default: Number of Availability Zones
      AvailabilityZones:
        default: Availability Zones
      VPCID:
        default: VPC ID
      VPCCIDR:
        default: VPC CIDR
      PrivateSubnet1ID:
        default: Private subnet 1 ID
      PrivateSubnet2ID:
        default: Private subnet 2 ID
      PrivateSubnet3ID:
        default: Private subnet 3 ID
      PublicSubnet1ID:
        default: Public subnet 1 ID
      PublicSubnet2ID:
        default: Public subnet 2 ID
      PublicSubnet3ID:
        default: Public subnet 3 ID
      BootNodeAccessCIDR:
        default: Boot node external access CIDR
      DomainName:
        default: Domain name
      KeyPairName:
        default: Key pair name
      NumberOfMaster:
        default: Number of master nodes
      NumberOfCompute:
        default: Number of compute nodes
      MasterInstanceType:
        default: Master instance type
      ComputeInstanceType:
        default: Compute instance type
      ClusterName:
        default: Cluster name
      DedicatedOCS:
        default: Dedicated storage nodes for OCS
      NumberOfOCS:
        default: Number of OCS nodes
      OCSInstanceType:
        default: OCS instance type
      RedhatPullSecret:
        default: Red Hat pull secret
      CP4IVersion:
        default: IBM Cloud Pak for Integration version
      APIUsername:
        default: IBM Cloud Pak for Integration API user name
      APIKey:
        default: IBM Cloud Pak for Integration entitlement key (APIKey)
      LicenseAgreement:
        default: License agreement
      Namespace:
        default: OpenShift project
      AdminPassword:
        default: Cloud Pak for Integration UI password
      AR:
        default: Asset Repository
      OD:
        default: Operations Dashboard
      APILM:
        default: API Lifecycle and Management
      AIDB:
        default: Application Integration Dashboard
      AIDE:
        default: Application Integration Designer
      MQ:
        default: Messaging
      ES:
        default: Event Streaming
      GW:
        default: Gateway
      HST:
        default: High Speed Transfers
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3BucketRegion:
        default: Quick Start S3 bucket Region
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      CP4IDeploymentLogsBucketName:
        default: Output S3 bucket name


Parameters:
  NumberOfAZs:  
    Default: 3
    Description: >-
      The number of Availability Zones used for the deployment. Note that some Regions might be limited to two Availability Zones. For a single IBM Cloud Pak for CP4I cluster to be highly available, three Availability Zones are needed to avoid a single point of failure when using three, five, or seven master nodes. With fewer than three Availability Zones, one of the zone will have more master nodes.
    Type: Number
    AllowedValues:
    - 1
    - 3  
  AvailabilityZones:
    Description: The list of Availability Zones to use for the subnets in the VPC. The Quick Start uses one or three Availability Zones and preserves the logical order that you specify.
    Type: List<AWS::EC2::AvailabilityZone::Name>
  VPCID:
    Description: The ID of your existing VPC for deployment.
    Type: AWS::EC2::VPC::Id
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.0.0/16
    Description: The CIDR block of the existing VPC.
    Type: String
  PrivateSubnet1ID:
    Description: The ID of the private subnet in Availability Zone 1 for the workload (e.g., subnet-a0246dcd).
    Type: String
  PrivateSubnet2ID:
    Description: The ID of the private subnet in Availability Zone 2 for the workload (e.g., subnet-b1f432cd).
    Type: String
  PrivateSubnet3ID:
    Description: The ID of the private subnet in Availability Zone 3 for the workload (e.g., subnet-b1f4a2cd).
    Type: String
  PublicSubnet1ID:
    Description: The ID of the public subnet in Availability Zone 1 for the ELB load balancer (e.g., subnet-9bc642ac).
    Type: String
  PublicSubnet2ID:
    Description: The ID of the public subnet in Availability Zone 2 for the ELB load balancer (e.g., subnet-e3246d8e).
    Type: String
  PublicSubnet3ID:
    Description: The ID of the public subnet in Availability Zone 3 for the ELB load balancer (e.g., subnet-e324ad8e).
    Type: String
  BootNodeAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR IP range that is allowed to access boot node instance. Set this value to a trusted IP range. The value `0.0.0.0/0` allows access to all IP addresses. Additional values can be added post-deployment from the Amazon EC2 console.
    Type: String
  DomainName:
    Description: 'Amazon Route 53 base domain configured for your OpenShift Container Platform cluster. Name must consist of lowercase alphanumeric characters and must start and end with an alphanumeric character.'
    Type: String
  KeyPairName:
    Description: The name of an existing public/private key pair, which allows you
      to securely connect to your instance after it launches.
    Type: AWS::EC2::KeyPair::KeyName
  NumberOfMaster:
    Default: '3'
    Description: The desired capacity for the OpenShift master instances. Must be an odd number. For a development deployment, 1 is sufficient; for production deployments, a minimum of 3 is required.
    Type: String
    AllowedPattern: '^[13579]$|(^[1-9]+[13579]$)'
  NumberOfCompute:
    Default: '3'
    Description: The desired capacity for the OpenShift compute instances. Minimum of 3 nodes required. If the number of compute instances exceeds your Red Hat entitlement limits or AWS instance limits, the stack will fail. Choose a number that is within your limits.
    Type: Number
  MasterInstanceType:
    Default: m5.2xlarge
    AllowedValues:
      - m5.xlarge
      - m5.2xlarge
      - m5d.xlarge
      - m5d.2xlarge
    ConstraintDescription: Must contain valid instance type.
    Description: The EC2 instance type for the OpenShift master instances.
    Type: String
  ComputeInstanceType:
    Default: m5.8xlarge
    AllowedValues:
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
      - r5.4xlarge
      - r5.9xlarge
      - r5.12xlarge
      - r5.18xlarge
      - r5.24xlarge
    ConstraintDescription: Must contain valid instance type.
    Description: The EC2 instance type for the OpenShift compute instances.
    Type: String
  ClusterName:
    Description: Custom cluster name for kubernetes.io/cluster/tags.
    Type: String
    AllowedPattern: ^[0-9a-z-]*$
  DedicatedOCS:
    Description: >-
       Choose "True" to deploy dedicated OCS nodes.
    Type: String
    AllowedValues:
      - "False"
      - "True"
    Default: "False"
  NumberOfOCS:
    Default: '3'
    Description: Update this value if storage type is OCS. The desired capacity for the OpenShift container storage instances. Minimum of 3 is required.
    Type: String
    AllowedPattern: '^[3579]$|(^[3-9]+[3579]$)'
  OCSInstanceType:
    Default: m4.4xlarge
    AllowedValues:
      - m4.4xlarge
      - m4.8xlarge
      - m5.8xlarge
      - m5.12xlarge
      - c5.8xlarge
      - c5.12xlarge
      - c5.9xlarge
      - r5.4xlarge
      - r5.8xlarge
      - r5.12xlarge
      - m4.10xlarge
      - c4.8xlarge
    ConstraintDescription: Must contain valid instance type.
    Description: Update this value if storage type is OCS. The EC2 instance type for the OpenShift Container Storage instances.
    Type: String
  RedhatPullSecret:
    Description: Your Red Hat Network (RHN) pull secret (e.g., s3://my-bucket/path/to/pull-secret).
    Type: String
  CP4IVersion:
    Description: The version of IBM Cloud Pak for Integration to be deployed. Currently only 2020.4 is supported.
    Type: String
    AllowedValues:
      - 2020.4
    Default: 2020.4
  APIUsername:
    Description: >-
       The IBM Cloud Pak for Integration user name to access IBM Container Registry.
    Type: String
    Default: "cp"
  APIKey:
    Description: >-
       The IBM Cloud Pak for Integration API key to access IBM Container Registry.
    Type: String 
    NoEcho: 'true'
  LicenseAgreement:
    Description: >-
      I have read and agree to the license terms for IBM Cloud Pak for Integration (http://ibm.biz/cp4i-license).
    Type: String
    Default: '-' 
    AllowedValues:
      - I agree
      - '-'
    ConstraintDescription: Must answer 'I agree.'
  Namespace:
    Description: >-
      The OpenShift project that is created for deploying Cloud Pak for Integration. The name can be any lowercase string.
    Type: String
    Default: "integration"
  AdminPassword:
    Description: The password for the Cloud Pak for Integration Platform Navigator. The password must contain at least 8 characters, including letters (with a minimum of one uppercase letter), numbers, and symbols. If no password is provided, the installer generates one that can be retrieved from 'PlatformNavigatorSecret'.
    Type: String
    MinLength: '8'
    AllowedPattern: ^[^ \\']+$
    Default: "NotProvided"
  AR:
    Description: >-
       Choose "True" to install an example instance of the Asset Repository capability.
    Type: String
    AllowedValues:
      - "False"
      - "True"
    Default: "False"
  OD:
    Description: >-
       Choose "True" to install an example instance of the Operations Dashboard capability.
    Type: String
    AllowedValues:
      - "False"
      - "True"
    Default: "False"
  APILM:
    Description: >-
       Choose "True" to install an example instance of the API Lifecycle and Management capability.
    Type: String
    AllowedValues:
      - "False"
      - "True"
    Default: "False"
  AIDB:
    Description: >-
       Choose "True" to install an example instance of the Application Integration Dashboard capability.
    Type: String
    AllowedValues:
      - "False"
      - "True"
    Default: "False"
  AIDE:
    Description: >-
       Choose "True" to install an example instance of the Application Integration Designer capability.
    Type: String
    AllowedValues:
      - "False"
      - "True"
    Default: "False"
  MQ:
    Description: >-
       Choose "True" to install an example instance of the Messaging runtime.
    Type: String
    AllowedValues:
      - "False"
      - "True"
    Default: "False"
  ES:
    Description: >-
       Choose "True" to install an example instance of the Event Streaming runtime.
    Type: String
    AllowedValues:
      - "False"
      - "True"
    Default: "False"
  GW:
    Description: >-
       Choose "True" to install an example instance of the Gateway service.
    Type: String
    AllowedValues:
      - "False"
      - "True"
    Default: "False"
  HST:
    Description: >-
       Choose "True" to install an example instance of the High Speed Transfers runtime.
    Type: String
    AllowedValues:
      - "False"
      - "True"
    Default: "False"
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: The Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket that you created for your copy of Quick Start assets. Use this if you decide to customize the Quick Start. This bucket name can include numbers, lowercase letters, uppercase letters, and hyphens, but do not start or end with a hyphen (-). Unless you are customizing the template, keep the default setting. Changing this setting updates code references to point to a new Quick Start location. See https://aws-quickstart.github.io/option1.html.
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value. Unless you are customizing the template, keep the default setting. Changing this setting updates code references to point to a new Quick Start location. See https://aws-quickstart.github.io/option1.html.'
    Type: String   
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-ibm-integration/  
    Description: S3 key prefix that is used to simulate a directory for your copy of Quick Start assets. Use this if you decide to customize the Quick Start. This prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slashes (/). See https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html. Unless you are customizing the template, keep the default setting. Changing this setting updates code references to point to a new Quick Start location. See https://aws-quickstart.github.io/option1.html.
    Type: String
  CP4IDeploymentLogsBucketName:
    Description: 'The name of the S3 bucket where IBM Cloud Pak for Integration deployment logs are to be exported. The deployment logs provide a record of the boot strap scripting actions and are useful for problem determination if the deployment fails in some way.'
    Type: String


Mappings:

  AWSAMIRegionMap:
    eu-central-1:
      RHEL76HVM: ami-062dacb006c5860f9
      COREOS: ami-0ceea534b63224411
    ap-southeast-2:
      RHEL76HVM: ami-0f1ef883e90ca71c0
      COREOS: ami-08929f33bfab49b83
    eu-west-1:
      RHEL76HVM: ami-0a0d2dc2f521ddce6
      COREOS: ami-0e95125b57fa63b0d
    us-east-1:
      RHEL76HVM: ami-0916c408cb02e310b
      COREOS: ami-06f85a7940faa3217
    us-east-2:
      RHEL76HVM: ami-03cfe750d5ea278f5
      COREOS: ami-04a79d8d7cfa540cc
    us-west-2:
      RHEL76HVM: ami-04b7963c90686dd4c
      COREOS: ami-0d231993dddc5cd2e
    ap-northeast-1:
      RHEL76HVM: ami-0dc41c7805e171046
      COREOS: ami-023d0452866845125
    eu-west-2:
      RHEL76HVM: ami-096fbd31de0375d2a
      COREOS: ami-0eef98c447b85ffcd
    eu-west-3:
      RHEL76HVM: ami-025fb013ee01513b5
      COREOS: ami-0049e16104f360df6
    ap-southeast-1:
      RHEL76HVM: ami-07cafca3788493264
      COREOS:  ami-086b93722336bd1d9
    eu-north-1:
      RHEL76HVM: ami-75941f0b
      COREOS: ami-06b7087b2768f644a
    ap-south-1:
      RHEL76HVM: ami-021912f2c8d2c70c9
      COREOS: ami-0bf62e963a473068e
    ap-northeast-2:
      RHEL76HVM: ami-0b5425629eb18a008
      COREOS: ami-0ba4f9a0358bcb44a
    sa-east-1:
      RHEL76HVM: ami-048b2348ac2ccfc53
      COREOS: ami-0c80d785b30eef121
    ca-central-1:
      RHEL76HVM: ami-05816666b3178f208
      COREOS: ami-0f6d943a1fa9172fd
    us-west-1:
      RHEL76HVM: ami-0388d197bb42be9be
      COREOS: ami-0633b392e8eff25e7


#  AWSRegionS3Bucket:
#    ap-northeast-1:
#      ICP4IArchiveBucket: ibm-cloud-private-data-ap-northeast-1
#    ap-northeast-2:
#      ICP4IArchiveBucket: ibm-cloud-private-data-ap-northeast-2
#    ap-northeast-3:
#      ICP4IArchiveBucket: ibm-cloud-private-data-ap-northeast-3
#    ap-south-1:
#      ICP4IArchiveBucket: ibm-cloud-private-data-ap-south-1
#    ap-southeast-1:
#      ICP4IArchiveBucket: ibm-cloud-private-data-ap-southeast-1
#    ap-southeast-2:
#      ICP4IArchiveBucket: ibm-cloud-private-data-ap-southeast-2
#    ca-central-1:
#      ICP4IArchiveBucket: ibm-cloud-private-data-ca-central-1
#    eu-central-1:
#      ICP4IArchiveBucket: ibm-cloud-private-data-eu-central-1
#    eu-north-1:
#      ICP4IArchiveBucket: ibm-cloud-private-data-eu-north-1
#    eu-west-1:
#      ICP4IArchiveBucket: cftests
#    eu-west-2:
#      ICP4IArchiveBucket: aws-quickstart-e2e
#    eu-west-3:
#      ICP4IArchiveBucket: ibm-cloud-private-data-eu-west-3
#    sa-east-1:
#      ICP4IArchiveBucket: ibm-cloud-private-data-sa-east-1
#    us-east-1:
#      ICP4IArchiveBucket: ibm-cloud-private-data-us-east-1
#    us-east-2:
#      ICP4IArchiveBucket: ibm-cloud-private-data-us-east-2
#    us-west-1:
#      ICP4IArchiveBucket: ibm-cloud-private-data-us-west-1
#    us-west-2:
#      ICP4IArchiveBucket: ibm-cloud-private-data-us-west-2


Rules:
 
  LicenseAgreementRule:
    Assertions:
    - Assert:
        Fn::Contains:
        - - I agree
        - Ref: LicenseAgreement
      AssertDescription: User must agree to the terms of the license agreement.    

  SubnetsInVPC:
    Assertions:
      - Assert: !EachMemberIn
          - !ValueOfAll
            - AWS::EC2::Subnet::Id
            - VpcId
          - !RefAll 'AWS::EC2::VPC::Id'
        AssertDescription: All subnets must in the VPC.

Conditions:
  # CreateEFS: !Equals [!Ref StorageType, "EFS"]
  3AZCondition: !Equals [!Ref NumberOfAZs, 3]
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']

Resources:
  CP4IIAMUser:
    Type: 'AWS::IAM::User'
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  CP4IIAMUserAccessKey:
    Type: 'AWS::IAM::AccessKey'
    Properties:
      UserName: !Ref CP4IIAMUser

  CP4ISecret:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      SecretString: !Sub '{"adminPassword":"${AdminPassword}","apikey":"${APIKey}"}'

  PlatformNavigatorSecret:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      SecretString: !Sub '{"adminPassword":""}'

  OpenshiftSecret:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      SecretString: !Sub '{"ocpPassword":""}'

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Path: /
      Policies:
        - PolicyName: lambda-cleanUpLambda
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:SendCommand
                  - ssm:PutParameter
                  - ssm:GetParameter
                  - ssm:DeleteParameter
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - logs:FilterLogEvents
                Resource:
                  - '*' 

  BootNodeIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service:
            - "ec2.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess
      Policies:
      - PolicyName: bootnode-policy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action: "ec2:Describe*"
            Resource: "*"
          - Effect: "Allow"
            Action: "ec2:AttachVolume"
            Resource: "*"
          - Effect: "Allow"
            Action: "ec2:DetachVolume"
            Resource: "*"
          - Effect: "Allow"
            Action: "s3:GetObject"
            Resource: !Sub
              - arn:${AWS::Partition}:s3:::${S3Bucket}/${QSS3KeyPrefix}*
              - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
          - Effect: "Allow"
            Action:
            - "secretsmanager:GetSecretValue"
            - "secretsmanager:UpdateSecret"
            Resource:
            - !Ref CP4ISecret  
            - !Ref AWSCredentialSecret
            - !Ref OpenshiftSecret
            - !Ref PlatformNavigatorSecret
          - Effect: "Allow"
            Action: "s3:ListBucket"
            Resource: !Sub arn:aws:s3:::${CP4IDeploymentLogsBucketName}
          - Effect: "Allow"
            Action: "s3:PutObject"
            Resource: !Sub arn:aws:s3:::${CP4IDeploymentLogsBucketName}/*
          - Effect: Allow
            Action:
            - ssm:SendCommand
            - ssm:PutParameter
            - ssm:GetParameter
            Resource:
            - '*'

  OpenshiftURL:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "${AWS::StackName}-OpenshiftURL"
      Type: String
      Value: "PlaceHolder"

  CP4IURL:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "${AWS::StackName}-CP4IURL"
      Type: String
      Value: "PlaceHolder"

  BootnodeInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
      - Ref: "BootNodeIamRole"

  BootnodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster Bootnode Security Group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref BootNodeAccessCIDR
      VpcId: !Ref VPCID

  AWSCredentialSecret:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      SecretString: !Sub 
        - '{"aws_secret_access_key":"${CP4IIAMUserAccessKey}, "aws_access_key_id":"${CP4IIAMUserSecret}"}'
        - {CP4IIAMUserAccessKey: !Ref CP4IIAMUserAccessKey, CP4IIAMUserSecret: !GetAtt [CP4IIAMUserAccessKey, SecretAccessKey]}

  BootnodeInstance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          Required:
            - StackPropertiesFile

        StackPropertiesFile:
          files:
            /root/mystack.props:
              content: !Sub |
                AWS_REGION=${AWS::Region}
                AWS_STACKID="${AWS::StackId}"
                AWS_STACKNAME="${AWS::StackName}"

            /root/.aws/config:
              content: !Sub |
                [default]
                region=${AWS::Region}
                
            /root/.aws/credentials:
              content: 
                !Sub 
                - |  
                  [default]
                  aws_access_key_id=${CP4IIAMUserAccessKey}
                  aws_secret_access_key=${CP4IIAMUserSecret}
                - 
                  CP4IIAMUserAccessKey: !Ref CP4IIAMUserAccessKey 
                  CP4IIAMUserSecret: !GetAtt [CP4IIAMUserAccessKey, SecretAccessKey]

    Properties:
      KeyName: !Ref 'KeyPairName'
      ImageId: !FindInMap [AWSAMIRegionMap, !Ref "AWS::Region", RHEL76HVM]
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 500
            VolumeType: gp2    
      IamInstanceProfile: !Ref BootnodeInstanceProfile
      Tags:
        - Key: Name
          Value: BootNode
      InstanceType: i3.large
      NetworkInterfaces:
      - GroupSet:
        - !Ref BootnodeSecurityGroup
        AssociatePublicIpAddress: true
        DeviceIndex: '0'
        DeleteOnTermination: true
        SubnetId: !Ref PublicSubnet1ID  
      UserData:
        Fn::Base64:
          !Sub 
          - |
            #!/bin/bash -x
            yum install -y git
            yum install -y wget
            yum install -y unzip
            
            git clone https://github.com/aws-quickstart/quickstart-linux-utilities.git
            export P=/quickstart-linux-utilities/quickstart-cfn-tools.source
            source $P
            qs_bootstrap_pip || qs_err " pip bootstrap failed "
            qs_aws-cfn-bootstrap || qs_err "cfn bootstrap failed"
            pip install awscli  &> /var/log/userdata.awscli_install.log || qs_err " awscli install failed "
            /usr/bin/cfn-init -v --stack ${AWS::StackName} --resource BootnodeInstance --configsets Required --region ${AWS::Region}
            export CP4I_QS_S3URI=s3://${QSS3BucketName}/${QSS3KeyPrefix}
            export AWS_REGION=${AWS::Region}
            export AWS_STACKID=${AWS::StackId}
            export AWS_STACKNAME=${AWS::StackName}
            export AMI_ID='${AMI_ID}'
            export CP4I_SECRET='${CP4ISecret}'
            export OCP_SECRET='${OpenshiftSecret}'
            export PN_SECRET='${PlatformNavigatorSecret}'
            export ICP4IInstallationCompletedURL='${ICP4IInstallationCompletedHandle}'
            mkdir -p /quickstart
            mkdir -p /ibm
            aws s3 cp ${!CP4I_QS_S3URI}scripts/bootstrap.sh /quickstart/
            chmod +x /quickstart/bootstrap.sh
            ./quickstart/bootstrap.sh
          -
            AMI_ID: !FindInMap [AWSAMIRegionMap, !Ref "AWS::Region", COREOS]
            # ICP4IArchiveBucket: !FindInMap [AWSRegionS3Bucket, !Ref "AWS::Region", ICP4IArchiveBucket]
            # EFSID:  !If [CreateEFS, !GetAtt ClusterSharedStorage.Outputs.EFSFileSystemId, ""]
            # EFSDNSName: !If [CreateEFS, !GetAtt ClusterSharedStorage.Outputs.EFSDNSName,""]

  CleanUpLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import boto3
          import json
          import cfnresponse
          import os
          import traceback
          import time
          def handler(event, context):
              responseData = {}
              try:
                  print("event_obj:",json.dumps(event))
                  print(event['RequestType'])
                  if event['RequestType'] == 'Delete':
                    print("Run unsubscribe script")
                    ssm = boto3.client('ssm',region_name=os.environ['Region'])
                    instanceID = os.environ['BootNode']
                    stackname = os.environ['StackName']
                    print instanceID
                    response = ssm.send_command(Targets=[{"Key":"instanceids","Values":[instanceID]}],
                            DocumentName="AWS-RunShellScript",
                            Parameters={"commands":["/ibm/destroy.sh %s" %(stackname)],
                                        "executionTimeout":["1200"],
                                        "workingDirectory":["/ibm"]},
                            Comment="Execute script in uninstall openshift",
                            TimeoutSeconds=120)
                    print(response)
                    current_status = "WAIT"
                    final_status = "READY"
                    parameterName = stackname+"_CleanupStatus"           
                    response = ssm.put_parameter(Name=parameterName,
                           Description="Waiting for CleanupStatus to be READY",
                           Value=current_status,
                           Type='String',
                           Overwrite=True)        
                    print(response)    
                    while(current_status!=final_status):
                      time.sleep(30) 
                      response = ssm.get_parameter(Name=parameterName)
                      parameter = response.get('Parameter')
                      current_status = parameter.get('Value')
                      print(current_status)
                    ssm.delete_parameter(Name=parameterName)    
              except Exception as e:
                print(e)
                traceback.print_exc()
              cfnresponse.send(event, context, cfnresponse.SUCCESS, {}, '')
      Environment:
        Variables:
          Region: !Ref AWS::Region
          BootNode: !Ref BootnodeInstance
          # Storage: !Ref StorageType
          StackName: !Ref AWS::StackName
      Handler: index.handler
      Role: !GetAtt 'LambdaExecutionRole.Arn'
      Runtime: python2.7
      Timeout: 600
  
  Cleanup :
    Type: Custom::Cleanup
    Properties:
      DependsOn: BootnodeInstance
      ServiceToken: !GetAtt 'CleanUpLambda.Arn'
  
  ICP4IInstallationCompletedHandle:
    Type: AWS::CloudFormation::WaitConditionHandle  
  
  ICP4IInstallationCompleted:
    Type: AWS::CloudFormation::WaitCondition
    Properties:
      Count: 1
      Handle: !Ref ICP4IInstallationCompletedHandle
      Timeout: '30000'  


Outputs:
  BootnodeInstanceId:
    Description: Boot node instance ID.
    Value: !Ref BootnodeInstance
  
  BootnodePublicIp:
    Description: The boot node public IP address.
    Value: !GetAtt BootnodeInstance.PublicIp
  
  CP4IWebClientURL:
    Description: IBM CloudPak for Integration web client URL.
    Value: !GetAtt CP4IURL.Value
  
  PlatformNavigatorPassword:
    Description: IBM CloudPak for Integration password secret.
    Value: !Ref PlatformNavigatorSecret
  
  OpenshiftURLValue:
    Description: The URL for the OpenShift UI.
    Value: !GetAtt OpenshiftURL.Value
  
  OpenshiftPassword:
    Description: OpenShift password secret.
    Value: !Ref OpenshiftSecret
